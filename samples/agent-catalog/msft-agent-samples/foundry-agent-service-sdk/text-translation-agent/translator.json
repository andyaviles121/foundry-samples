{
  "openapi": "3.0.1",
  "info": {
    "title": "Translation service",
    "description": "translate the given text in to the requested target language",
    "version": "v3.0"
  },
  "servers": [
    {
      "url": "https://api.cognitive.microsofttranslator.com"
    }
  ],
  "security": [
    {
      "${translator_resource_connection_name}": []
    }
  ],
  "paths": {
    "/translate": {
      "post": {
        "tags": [
          "Translate"
        ],
        "description": "Translates text into one or more languages.",
        "operationId": "Translator_Translate",
        "parameters": [
          {
            "name": "ocp-apim-subscription-region",
            "in": "header",
            "description": "the local region of the endpoint",
            "required": true,
            "schema": {
              "type": "string",
              "default": "${translator_resource_region}"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API requested by the client. Value must be 3.0.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "3.0"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Specifies the language of the input text. Find which languages are available to translate from by using the languages method. If the `from` parameter is not specified, automatic language detection is applied to determine the source language.\n",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Specifies the language of the output text. For example, use `to=de` to translate to German. It is possible to translate to multiple languages simultaneously by repeating the `to` parameter in the query string. For example, use `to=de&to=it` to translate to German and Italian in the same request. The language requested should be according to the 2 letter iso format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The text to translate",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TranslateTextInput"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslateResultAll"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "TranslateTextInput": {
        "type": "object",
        "description": "Text of the request to be translated",
        "properties": {
          "text": {
            "type": "string",
            "maximum": 5000
          }
        },
        "example": {
          "text": "I would really like to drive your car."
        }
      },
      "TranslateResultAll": {
        "type": "array",
        "description": "Example of a successful translate request, including all optional parameters.",
        "items": {
          "type": "object",
          "properties": {
            "detectedLanguage": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string"
                },
                "score": {
                  "type": "integer"
                }
              }
            },
            "translations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "transliteration": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      },
                      "script": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "string"
                  },
                  "alignment": {
                    "type": "object",
                    "properties": {
                      "proj": {
                        "type": "string"
                      }
                    }
                  },
                  "sentLen": {
                    "type": "object",
                    "properties": {
                      "srcSentLen": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "integer": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "transSentLen": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "integer": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "${translator_resource_connection_name}": {
        "type": "apiKey",
        "name": "ocp-apim-subscription-key",
        "in": "header",
        "required": true
      }
    }
  }
}